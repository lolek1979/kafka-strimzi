{{- if .Values.kafkaUi.enabled }}
{{- $kui := .Values.kafkaUi | default (dict) -}}
{{- $tls := $kui.tls | default (dict) -}}
{{- $ext := $kui.externalCluster | default (dict) -}}
{{- $extTls := $ext.tls | default (dict) -}}
{{- $extEnabled := and ($ext.enabled | default false) ($ext.bootstrapServers | default "") -}}
{{- $extOauth := $ext.oauth | default (dict) -}}
{{- $extReuse := default true $extOauth.reusePrimarySecret -}}
{{- $primarySecret := default "kafka-ui-oauth" $kui.oauth.k8sSecretName -}}
{{- $primaryKey := default "sasl-jaas-config" $kui.oauth.jaasKey -}}
{{- $externalSecret := $primarySecret -}}
{{- $externalKey := $primaryKey -}}
{{- if and $extEnabled (not $extReuse) ($extOauth.k8sSecretName | default "") -}}
  {{- $externalSecret = $extOauth.k8sSecretName -}}
{{- end -}}
{{- if and $extEnabled (not $extReuse) ($extOauth.jaasKey | default "") -}}
  {{- $externalKey = $extOauth.jaasKey -}}
{{- end -}}
{{- $extCaSecret := default "" $extTls.caSecretName -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  namespace: {{ include "kafka-ui.ns" . }}
  labels:
    app: kafka-ui
spec:
  replicas: {{ default 1 .Values.kafkaUi.replicas }}
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
      annotations:
        checksum/config: "{{ include (print $.Template.BasePath "/40-kafka-ui-configmap.yaml") . | sha256sum }}"
        checksum/authcm: "{{ include (print $.Template.BasePath "/40-kafka-ui-auth-cm.yaml") . | sha256sum }}"
    spec:
      containers:
        - name: ui
          image: {{ default "kafbat/kafka-ui:latest" .Values.kafkaUi.image }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.kafkaUi.imagePullPolicy }}
          envFrom:
            - configMapRef:
                name: kafka-ui
          env:
            - name: KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG
              valueFrom:
                secretKeyRef:
                  name: {{ $primarySecret | quote }}
                  key:  {{ $primaryKey | quote }}
{{- if $extEnabled }}
            - name: KAFKA_CLUSTERS_1_PROPERTIES_SASL_JAAS_CONFIG
              valueFrom:
                secretKeyRef:
                  name: {{ $externalSecret | quote }}
                  key:  {{ $externalKey | quote }}
{{- end }}
            - name: KAFKA_UI_SSO_CLIENT_ID
              valueFrom: { secretKeyRef: { name: kafka-ui-sso, key: clientId } }
            - name: KAFKA_UI_SSO_CLIENT_SECRET
              valueFrom: { secretKeyRef: { name: kafka-ui-sso, key: clientSecret } }
            - name: SPRING_CONFIG_ADDITIONAL_LOCATION
              value: /etc/kafkaui/
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - name: kafka-ui-auth
              mountPath: /etc/kafkaui
              readOnly: true
{{- if $tls.caSecretName }}
            - name: kafka-cluster-ca
              mountPath: {{ $tls.mountPath | default "/etc/kafka/cluster-ca" }}
              readOnly: true
{{- end }}
{{- if and $extEnabled $extCaSecret }}
            - name: kafka-external-ca
              mountPath: {{ $extTls.mountPath | default "/etc/kafka/external-ca" }}
              readOnly: true
{{- end }}
      volumes:
        - name: kafka-ui-auth
          configMap: { name: kafka-ui-auth }
{{- if $tls.caSecretName }}
        - name: kafka-cluster-ca
          secret:
            secretName: {{ $tls.caSecretName | quote }}
{{- end }}
{{- if and $extEnabled $extCaSecret }}
        - name: kafka-external-ca
          secret:
            secretName: {{ $extCaSecret | quote }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
  namespace: {{ include "kafka-ui.ns" . }}
  labels:
    app: kafka-ui
  {{- with .Values.kafkaUi.service.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
  {{- end }}
spec:
  type: {{ default "ClusterIP" .Values.kafkaUi.service.type }}
  {{- with .Values.kafkaUi.service.loadBalancerIP }}
  loadBalancerIP: {{ . | quote }}
  {{- end }}
  ports:
    - name: http
      port: {{ default 80 .Values.kafkaUi.service.port }}
      targetPort: 8080
  selector:
    app: kafka-ui
{{- end }}
