# ================================
# Env selector
# ================================
env: "prod"

# ================================
# Namespaces (env)
# ================================
namespaces:
  kafka: kafka
  kafkaUi: kafka-ui
  schemaRegistry: schema-registry
  lagExporter: observability

# ================================
# Azure (env)
# ================================
azure:
  keyVaultName: "kv-vzp-prod-we-aks-002"
  uamiClientId: "51f497be-2032-4061-9532-836ce4410134" # CHANGE IT

# AKV CSI objects
oauthAkvAudienceObjectName: "kafka-oidc-audience-app-id-prod"
oauthAkvTenantObjectName:   "kafka-oidc-tenant-id-prod"

# ================================
# KafkaUser principals (env)
# ================================
kafkaUsers:
  enabled: true
  ui:
    principal: "317e7bb4-8588-4ad8-bdc3-5c7ab31500eb" # CHANGE IT (results of aad-kafka-bootstrap.sh or AKV)
  lag:
    principal: "19221e7e-d8bd-4905-820b-96a863dbc62d" # CHANGE IT (results of aad-kafka-bootstrap.sh or AKV)
  schema:
    principal: "51fc6f1a-70d8-44b1-97c3-1ccd8d9a7a63" # CHANGE IT (results of aad-kafka-bootstrap.sh or AKV)
# ================================
# Kafka (env)
# ================================
kafka:
  name: "kafka-vzp-prod-we-002"
  oauth:
    audienceAppId: "94ff8e0c-3d4d-4971-a474-a43efa7231cf" # CHANGE IT (results of aad-kafka-bootstrap.sh or AKV)
  authorization:
    type: simple
    superUsers:
      - "CN=kafka-vzp-prod-we-002-entity-operator" 
  nodePools:
    - name: broker
      replicas: 1
      roles: [broker, controller]
      storage:
        type: jbod
        volumes:
          - id: 0
            type: persistent-claim
            size: 20Gi
            class: managed-csi
            kraftMetadata: shared
            deleteClaim: false

  config:
    default.replication.factor: 1
    offsets.topic.replication.factor: 1
    transaction.state.log.replication.factor: 1
    min.insync.replicas: 1
    transaction.state.log.min.isr: 1

  listeners:
    internal:
      issuerVersion: v2
      port: 9092
      tls: false
    external:
      port: 9094
      tls: true
      issuerVersion: v2
      bootstrap:
        loadBalancerIP: "172.18.4.116"
      brokers:
        - id: 0
          advertisedHost: kafka-0.nprod.az.vzp.cz
          loadBalancerIP: "172.18.4.113" # CHANGE IT
        # - id: 1
        #   advertisedHost: kafka-1.nprod.az.vzp.cz
        #   loadBalancerIP: "172.18.4.114"
        # - id: 2
        #   advertisedHost: kafka-2.nprod.az.vzp.cz
        #   loadBalancerIP: "172.18.4.115"

# ================================
# Kafka-UI (env)
# ================================
kafkaUi:
  ingress: { enabled: false }
  service:
    type: ClusterIP
    port: 80
    annotations: {}
  sso:
    clientIdAkvName:     "kafka-ui-client-id-prod"
    clientSecretAkvName: "kafka-ui-client-secret-prod"
  oauth:
    issuerVersion: v2
    securityProtocol: "SASL_PLAINTEXT"
    k8sSecretName: kafka-ui-oauth
    jaasKey: "sasl-jaas-config"
  schemaRegistryUrl: "http://schema-registry-port.schema-registry.svc.cluster.local:8081"
  auth: { type: OAUTH2 }
  domain: ""

# ================================
# Schema Registry (env)
# ================================
schemaRegistry:
  image: "confluentinc/cp-schema-registry:7.9.0"
  replicas: 1
  service: { port: 8081, type: ClusterIP }
  kafkaBootstrap: "kafka-vzp-prod-we-002-kafka-bootstrap.kafka.svc.cluster.local:9092"
  compatibilityLevel: "BACKWARD"
  kafkastoreReplicationFactor: 3
  oauth:
    issuerVersion: v2
    k8sSecretName: schema-registry-oauth
    jaasKey: sasl-jaas-config

# ================================
# Kafka Lag Exporter (env)
# ================================
kafkaExporter:
  enabled: true
  oauth:
    k8sSecretName: kafka-lag-exporter-oauth
    jaasKey: sasl-jaas-config

# ================================
# Topics (env-specific)
# ================================
topics:
  - name: private.audit
    partitions: 6
    replicas: 1
    config:
      cleanup.policy: delete
      retention.ms: 2419200000
      min.insync.replicas: 1
      unclean.leader.election.enable: "false"
      compression.type: zstd
      segment.bytes: 1073741824
      max.message.bytes: 1048576

  - name: public.csc.dwh
    partitions: 6
    replicas: 1
    config:
      cleanup.policy: delete
      retention.ms: 1209600000
      min.insync.replicas: 1
      unclean.leader.election.enable: "false"
      compression.type: zstd
      segment.bytes: 1073741824
      max.message.bytes: 1048576

  - name: public.csc.dwh.ack
    partitions: 3
    replicas: 1
    config:
      cleanup.policy: delete
      retention.ms: 86400000
      min.insync.replicas: 1
      unclean.leader.election.enable: "false"
      compression.type: zstd
      segment.bytes: 1073741824
      max.message.bytes: 1048576

  - name: kafka-logs-topic
    partitions: 3
    replicas: 1
    config:
      cleanup.policy: delete
      retention.ms: 604800000
      min.insync.replicas: 1
      unclean.leader.election.enable: "false"
      compression.type: zstd
      segment.bytes: 1073741824
      max.message.bytes: 1048576
