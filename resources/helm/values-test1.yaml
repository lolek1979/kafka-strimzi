# ================================
# Env selector
# ================================
env: "test1"
dns:
  subdomain: "ntest1"
  domain: "az.vzp.cz"
# ================================
# Namespaces (env)
# ================================
namespaces:
  kafka: kafka
  kafkaUi: kafka-ui
  schemaRegistry: schema-registry

# ================================
# Azure (env)
# ================================
azure:
  keyVaultName: "kv-vzp-test1-we-aks-002"
  uamiClientId: "2197242c-6c55-4de4-ab60-1f97fee7d7d0" # CHANGE IT

# AKV CSI objects
oauthAkvAudienceObjectName: "kafka-oidc-audience-app-id-test1"
oauthAkvTenantObjectName:   "kafka-oidc-tenant-id-test1"

# ================================
# KafkaUser principals (env)
# ================================
kafkaUsers:
  enabled: true
  ui:
    principal: "aa209cf8-4f19-412b-a637-fa7775707e7d" # CHANGE IT (results of aad-kafka-bootstrap.sh or AKV)
  lag:
    principal: "7d34fa8e-aca3-488b-86c3-b23bf3dee1eb" # CHANGE IT (results of aad-kafka-bootstrap.sh or AKV)
  schema:
    principal: "972d3770-8f37-4e6f-8d6b-81fe8c90efde" # CHANGE IT (results of aad-kafka-bootstrap.sh or AKV)
    
# ================================
# Kafka (env)
# ================================
kafka:
  name: "kafka-vzp-test1-we-002"
  oauth:
    audienceAppId: "0b35c3db-1eb2-4102-b532-1c96f4aa3c51" # CHANGE IT (results of aad-kafka-bootstrap.sh or AKV)
  authorization:
    type: simple
    superUsers:
      - "CN=kafka-vzp-test1-we-002-entity-operator"
  nodePools:
    - name: broker
      replicas: 2
      roles: [broker, controller]
      storage:
        type: jbod
        volumes:
          - id: 0
            type: persistent-claim
            size: 20Gi
            class: managed-csi
            kraftMetadata: shared
            deleteClaim: false

  config:
    default.replication.factor: 2
    offsets.topic.replication.factor: 2
    transaction.state.log.replication.factor: 2
    min.insync.replicas: 1
    transaction.state.log.min.isr: 1

  listeners:
    internal:
      issuerVersion: v2
      port: 9092
      tls: true

    external:
      port: 9094
      tls: true
      issuerVersion: v2
      bootstrap:
        loadBalancerIP: "172.18.18.10"
      brokers:
        - id: 0
          advertisedHost: kafka-0.ntest1.az.vzp.cz
          loadBalancerIP: "172.18.18.11"
        - id: 1
          advertisedHost: kafka-1.ntest1.az.vzp.cz
          loadBalancerIP: "172.18.18.12"
        # - id: 2
        #   advertisedHost: kafka-2.ntest1.az.vzp.cz
        #   loadBalancerIP: "172.18.18.13"

# ================================
# Kafka-UI (env)
# ================================
kafkaUi:
  names:
    internal: "in-cluster"
    external: "aks-external"
  ingress: { enabled: false }
  service:
    type: LoadBalancer
    port: 80
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    loadBalancerIP: "172.18.18.15"
  sso:
    clientIdAkvName:     "kafka-ui-client-id-test1"
    clientSecretAkvName: "kafka-ui-client-secret-test1"
  oauth:
    issuerVersion: v2
    securityProtocol: "SASL_SSL"
    k8sSecretName: kafka-ui-oauth
    jaasKey: "sasl-jaas-config"
  tls:
    caSecretName: "kafka-vzp-test1-we-002-cluster-ca-cert"
    caCertificate: ca.crt
    mountPath: /etc/kafka/cluster-ca
  externalCluster:
    enabled: true
    name: "external"
    bootstrapServers: "kafka.ntest1.az.vzp.cz:9094"
    securityProtocol: "SASL_SSL"
    schemaRegistryUrl: "http://schema-registry.ntest1.az.vzp.cz:8081"
    tls:
      caSecretName: "kafka-external-ca"
      caCertificate: ca.crt
      mountPath: /etc/kafka/external-ca
  schemaRegistryUrl: "http://schema-registry.ntest1.az.vzp.cz:8081"
  auth: { type: OAUTH2 }
  domain: ""

# ================================
# Schema Registry (env)
# ================================
schemaRegistry:
  enabled: true
  image: "confluentinc/cp-schema-registry:7.9.0"
  replicas: 1
  service:
    type: LoadBalancer
    port: 8081
    # make it internal in Azure (optional):
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    # pin a static IP (optional). Omit this key to let AKS pick a free IP.
    loadBalancerIP: "172.18.18.14"
  kafkaBootstrap: "kafka-vzp-test1-we-002-kafka-bootstrap.kafka.svc.cluster.local:9092"
  compatibilityLevel: "BACKWARD"
  kafkastoreReplicationFactor: 2
  securityProtocol: "SASL_SSL"
  oauth:
    issuerVersion: v2
    k8sSecretName: schema-registry-oauth
    jaasKey: sasl-jaas-config
  tls:
    caSecretName: "kafka-vzp-test1-we-002-cluster-ca-cert"
    caCertificate: ca.crt
    mountPath: /etc/kafka/cluster-ca

# ================================
kafkaExporter:
  enabled: true
  securityProtocol: "SASL_SSL"
  oauth:
    k8sSecretName: kafka-lag-exporter-oauth
    jaasKey: sasl-jaas-config
  tls:
    caSecretName: "kafka-vzp-test1-we-002-cluster-ca-cert"
    caCertificate: ca.crt
    mountPath: /etc/kafka/cluster-ca

# ================================
# Topics (env-specific)
# ================================
topics:
  - name: private.audit
    partitions: 6
    replicas: 2
    config:
      cleanup.policy: delete
      retention.ms: 2419200000
      min.insync.replicas: 1
      unclean.leader.election.enable: "false"
      compression.type: zstd
      segment.bytes: 1073741824
      max.message.bytes: 1048576

  - name: public.csc.dwh
    partitions: 6
    replicas: 2
    config:
      cleanup.policy: delete
      retention.ms: 1209600000
      min.insync.replicas: 1
      unclean.leader.election.enable: "false"
      compression.type: zstd
      segment.bytes: 1073741824
      max.message.bytes: 1048576

  - name: public.csc.dwh.ack
    partitions: 3
    replicas: 2
    config:
      cleanup.policy: delete
      retention.ms: 86400000
      min.insync.replicas: 1
      unclean.leader.election.enable: "false"
      compression.type: zstd
      segment.bytes: 1073741824
      max.message.bytes: 1048576

  - name: kafka-logs-topic
    partitions: 3
    replicas: 2
    config:
      cleanup.policy: delete
      retention.ms: 604800000
      min.insync.replicas: 1
      unclean.leader.election.enable: "false"
      compression.type: zstd
      segment.bytes: 1073741824
      max.message.bytes: 1048576
